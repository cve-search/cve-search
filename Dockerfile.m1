FROM --platform=linux/arm64/v8 ubuntu:20.04

ARG DEBIAN_FRONTEND=noninteractive

WORKDIR /opt/cve
RUN mkdir cve-search
ADD sbin ./cve-search/sbin
ADD bin ./cve-search/bin
ADD test ./cve-search/test
ADD docs ./cve-search/docs
ADD lib ./cve-search/lib
ADD web ./cve-search/web
ADD etc ./cve-search/etc
COPY _config.yml ./cve-search
COPY pytest.ini ./cve-search
COPY build_db.sh ./cve-search
COPY update_db.sh ./cve-search
COPY fix_redis_keys.sh ./cve-search
COPY create_pvcves_mongodb.py ./cve-search
COPY create_pvcves_redis.rb ./cve-search
COPY cron_at_job_update.sh ./cve-search
COPY start_services.sh ./cve-search
RUN mkdir ./cve-search/log
RUN mkdir ./cve-search/ssl

WORKDIR /tmp
COPY requirements.system .
COPY requirements.prod .
COPY requirements.txt .
COPY install_mongodb.sh .
COPY feedformatter/setup.py .
COPY feedformatter/feedformatter.py .

RUN apt-get update && \
    cat requirements.system requirements.prod | xargs apt-get install -y

RUN python3 setup.py install
RUN pip3 install -r requirements.txt

RUN chmod +x ./install_mongodb.sh && ./install_mongodb.sh

WORKDIR /opt/cve/cve-search

RUN cp ./etc/nginx.conf.sample /etc/nginx/sites-enabled/default
RUN cp ./etc/wsgi.ini.sample /etc/uwsgi/apps-enabled/wsgi.ini

RUN gem install mongo

RUN chmod +x ./start_services.sh
RUN chmod +x ./cron_at_job_update.sh
ENTRYPOINT ["/opt/cve/cve-search/start_services.sh"]

EXPOSE 5000/tcp

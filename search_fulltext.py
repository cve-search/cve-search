#!/usr/bin/env python3.1
# -*- coding: utf-8 -*-
#
# Search the CVE fulltext database
#
# Software is free software released under the "Modified BSD license"
#
# Copyright (c) 2012-2013 Alexandre Dulaunoy - a@foo.be

import pymongo
import os
import argparse

connect = pymongo.Connection()
db = connect.cvedb
collection = db.cves

indexpath = "./indexdir"


from whoosh import index
from whoosh.fields import *
schema = Schema(title=TEXT(stored=True), path=ID(stored=True), content=TEXT)

ix = index.open_dir("indexdir")

from whoosh.qparser import QueryParser

def getcve (cveid=None):
    if cveid is None:
        return False
    return collection.find_one({'id': cveid})

argParser = argparse.ArgumentParser(description='Fulltext search for cve-search')
argParser.add_argument('-q', action='append', help='query to lookup (one or more)')
argParser.add_argument('-t', action='store_true', help='output title of the match CVE(s)')
argParser.add_argument('-j', action='store_true', help='output JSON for match CVE(s)')
args = argParser.parse_args()

if not args.q:
    argParser.print_help()
    exit(1)

from whoosh.query import *

with ix.searcher() as searcher:
    query = QueryParser("content", ix.schema).parse(" ".join(args.q))
    results = searcher.search(query, limit=None)
    for x in results:
        if not args.j:
            print (x['path'])
            if args.t:
                print (" -- "+x['title'])
        else:
            print (getcve (cveid=x['path']))


require 'mongo'
  
def gen_redis_proto(*cmd)
  proto = ""
  proto << "*"+cmd.length.to_s+"\r\n"
  cmd.each { |arg|
    proto << "$"+arg.to_s.bytesize.to_s+"\r\n"
    proto << arg.to_s+"\r\n"
  }
  proto
end

a = {}
begin
  puts "Connect to mongo"
  client = Mongo::Client.new([ '127.0.0.1:27017' ], :database => "cvedb", :server_selection_timeout => 5)
  puts "Executing find"
  client[:cves].find.each do |cve|
    cve['vulnerable_product'].each do |product|
      product_name = product.split(":")[4]
      product_version = product.split(":")[5]
      a[product_name] = {} if a[product_name] == nil
      a[product_name][product_version] = [] if a[product_name][product_version] == nil
      a[product_name][product_version] << cve['id'] if !a[product_name][product_version].include?(cve['id'])
    end
  end
  puts "Find executed"
  client.close
rescue => e
  p "Cannot connect to the server"
  p e
end

file = File.open('/tmp/redis_import.txt','w')
file.write(gen_redis_proto("FLUSHALL"))
a.each do |product_name, versions|
  versions.each do |product_version, cves|
    file.write(gen_redis_proto("HSET", product_name, product_version, cves.uniq.join(',')))
  end
end
file.close

puts `cat /tmp/redis_import.txt | redis-cli --pipe`

from zipfile import ZipFile
from tarfile import TarFile
import os

from lib.ExtensionSignature import ExtensionSignature


class ArchiveManager:
    MAGIC_BYTES = ExtensionSignature.maxSize()

    @classmethod
    def extract(cls, archive, **kwargs) -> list:
        """
        Extracts the given archive.
        :param archive: The path for the archive to extract.
        :param kwargs:
            target (str): Target dir where to extract the archive.
        :return: The list of paths for the extracted files.
        """
        targetDir = os.path.dirname(archive)

        if kwargs.get("target"):
            targetDir = kwargs.get("target")

        with open(archive, "rb") as f:
            signature = f.read(ArchiveManager.MAGIC_BYTES)
            extension = ExtensionSignature.fromSignature(signature.hex())

        if ExtensionSignature.ZIP is extension:
            with ZipFile(archive) as f:
                items = f.namelist()

                f.extractall(path=targetDir)

                return [os.path.join(targetDir, item) for item in items]
        elif ExtensionSignature.TARGZ is extension:
            with TarFile.open(archive) as f:
                items = f.getnames()

                f.extractall(path=targetDir)

                return [os.path.join(targetDir, item) for item in items]
